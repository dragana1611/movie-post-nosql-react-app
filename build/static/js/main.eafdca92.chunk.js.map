{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","React","createElement","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","release","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","fetchMoviesHandler","useCallback","_asyncToGenerator","_callee","response","data","loadedMovies","_context","fetch","ok","json","concat","_toConsumableArray","t0","message","_addMovieHandler","_callee2","_context2","body","JSON","stringify","headers","apply","arguments","useEffect","content","MoviesList","Fragment","_x","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eafdca92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__5KKJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__59whF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__nesM_\"};","import React from \"react\";\n\nimport classes from \"./Movie.module.css\";\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\n\nimport Movie from \"./Movie\";\nimport classes from \"./MoviesList.module.css\";\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes[\"movies-list\"]}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.release}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from \"react\";\n\nimport classes from \"./AddMovie.module.css\";\n\nfunction AddMovie(props) {\n  const titleRef = useRef(\"\");\n  const openingTextRef = useRef(\"\");\n  const releaseDateRef = useRef(\"\");\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"opening-text\">Opening Text</label>\n        <textarea rows=\"5\" id=\"opening-text\" ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Release Date</label>\n        <input type=\"text\" id=\"date\" ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-da087-default-rtdb.europe-west1.firebasedatabase.app/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      let loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies = [\n          ...loadedMovies,\n          {\n            id: key,\n            title: data[key].title,\n            openingText: data[key].openingText,\n            releaseDate: data[key].releaseDate,\n          },\n        ];\n      }\n\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://react-http-da087-default-rtdb.europe-west1.firebasedatabase.app/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const data = await response.json();\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <header><h1>Sending a POST Request</h1></header>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}